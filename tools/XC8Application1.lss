
XC8Application1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000009c  00000000  00000000  000000f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  0000009c  000003e0  2**0
                  ALLOC
  2 .bss          000000b0  00800060  00800060  00000a2d  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  00000a2d  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000098  00000000  00000000  00000a5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000159c  00000000  00000000  00000af4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000078d  00000000  00000000  00002090  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000af3  00000000  00000000  0000281d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001e0  00000000  00000000  00003310  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001b1  00000000  00000000  000034f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000011e5  00000000  00000000  000036a1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000078  00000000  00000000  00004886  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000002  0000080c  0000080c  00000900  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00004900  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.KeyExpansion 00000250  0000009c  0000009c  00000190  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.xtime   00000010  000007ec  000007ec  000008e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.SubBytes_ShiftRows 000000c4  000006d8  000006d8  000007cc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.MixColumnns 00000128  000002ec  000002ec  000003e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.AddRoundKey 000000ec  00000508  00000508  000005fc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.aes_init 00000010  000007fc  000007fc  000008f0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.aes_cipher 000000e4  000005f4  000005f4  000006e8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .bss.aes_key_ready 00000001  0080023b  0080023b  00000a2d  2**0
                  ALLOC
 22 .data.RCon    0000000b  00800230  0000092e  00000a22  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 23 .data.sbox    00000100  00800110  0000080e  00000902  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 24 .text.convert_to_byte 00000050  0000079c  0000079c  00000890  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .rodata       00000020  00800210  0000090e  00000a02  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 26 .text.main    000000f4  00000414  00000414  00000508  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	25 c0       	rjmp	.+74     	; 0x4c <__ctors_end>
   2:	04 c4       	rjmp	.+2056   	; 0x80c <__bad_interrupt>
   4:	03 c4       	rjmp	.+2054   	; 0x80c <__bad_interrupt>
   6:	02 c4       	rjmp	.+2052   	; 0x80c <__bad_interrupt>
   8:	01 c4       	rjmp	.+2050   	; 0x80c <__bad_interrupt>
   a:	00 c4       	rjmp	.+2048   	; 0x80c <__bad_interrupt>
   c:	ff c3       	rjmp	.+2046   	; 0x80c <__bad_interrupt>
   e:	fe c3       	rjmp	.+2044   	; 0x80c <__bad_interrupt>
  10:	fd c3       	rjmp	.+2042   	; 0x80c <__bad_interrupt>
  12:	fc c3       	rjmp	.+2040   	; 0x80c <__bad_interrupt>
  14:	fb c3       	rjmp	.+2038   	; 0x80c <__bad_interrupt>
  16:	fa c3       	rjmp	.+2036   	; 0x80c <__bad_interrupt>
  18:	f9 c3       	rjmp	.+2034   	; 0x80c <__bad_interrupt>
  1a:	f8 c3       	rjmp	.+2032   	; 0x80c <__bad_interrupt>
  1c:	f7 c3       	rjmp	.+2030   	; 0x80c <__bad_interrupt>
  1e:	f6 c3       	rjmp	.+2028   	; 0x80c <__bad_interrupt>
  20:	f5 c3       	rjmp	.+2026   	; 0x80c <__bad_interrupt>
  22:	f4 c3       	rjmp	.+2024   	; 0x80c <__bad_interrupt>
  24:	f3 c3       	rjmp	.+2022   	; 0x80c <__bad_interrupt>
  26:	c1 c3       	rjmp	.+1922   	; 0x7aa <convert_to_byte+0xe>
  28:	de c3       	rjmp	.+1980   	; 0x7e6 <convert_to_byte+0x4a>
  2a:	c2 c3       	rjmp	.+1924   	; 0x7b0 <convert_to_byte+0x14>
  2c:	c4 c3       	rjmp	.+1928   	; 0x7b6 <convert_to_byte+0x1a>
  2e:	c6 c3       	rjmp	.+1932   	; 0x7bc <convert_to_byte+0x20>
  30:	c8 c3       	rjmp	.+1936   	; 0x7c2 <convert_to_byte+0x26>
  32:	ca c3       	rjmp	.+1940   	; 0x7c8 <convert_to_byte+0x2c>
  34:	cc c3       	rjmp	.+1944   	; 0x7ce <convert_to_byte+0x32>
  36:	ce c3       	rjmp	.+1948   	; 0x7d4 <convert_to_byte+0x38>
  38:	d0 c3       	rjmp	.+1952   	; 0x7da <convert_to_byte+0x3e>

0000003a <.dinit>:
  3a:	00 60       	ori	r16, 0x00	; 0
  3c:	01 10       	cpse	r0, r1
  3e:	80 01       	movw	r16, r0
  40:	10 02       	muls	r17, r16
  42:	3b 00       	.word	0x003b	; ????
  44:	08 0e       	add	r0, r24
  46:	02 3b       	cpi	r16, 0xB2	; 178
  48:	02 3c       	cpi	r16, 0xC2	; 194
  4a:	80 00       	.word	0x0080	; ????

0000004c <__ctors_end>:
  4c:	11 24       	eor	r1, r1
  4e:	1f be       	out	0x3f, r1	; 63
  50:	cf e5       	ldi	r28, 0x5F	; 95
  52:	d4 e0       	ldi	r29, 0x04	; 4
  54:	de bf       	out	0x3e, r29	; 62
  56:	cd bf       	out	0x3d, r28	; 61

00000058 <__do_copy_data>:
  58:	ea e3       	ldi	r30, 0x3A	; 58
  5a:	f0 e0       	ldi	r31, 0x00	; 0
  5c:	40 e0       	ldi	r20, 0x00	; 0
  5e:	17 c0       	rjmp	.+46     	; 0x8e <__do_clear_bss+0x8>
  60:	b5 91       	lpm	r27, Z+
  62:	a5 91       	lpm	r26, Z+
  64:	35 91       	lpm	r19, Z+
  66:	25 91       	lpm	r18, Z+
  68:	05 91       	lpm	r16, Z+
  6a:	07 fd       	sbrc	r16, 7
  6c:	0c c0       	rjmp	.+24     	; 0x86 <__do_clear_bss>
  6e:	95 91       	lpm	r25, Z+
  70:	85 91       	lpm	r24, Z+
  72:	ef 01       	movw	r28, r30
  74:	f9 2f       	mov	r31, r25
  76:	e8 2f       	mov	r30, r24
  78:	05 90       	lpm	r0, Z+
  7a:	0d 92       	st	X+, r0
  7c:	a2 17       	cp	r26, r18
  7e:	b3 07       	cpc	r27, r19
  80:	d9 f7       	brne	.-10     	; 0x78 <__do_copy_data+0x20>
  82:	fe 01       	movw	r30, r28
  84:	04 c0       	rjmp	.+8      	; 0x8e <__do_clear_bss+0x8>

00000086 <__do_clear_bss>:
  86:	1d 92       	st	X+, r1
  88:	a2 17       	cp	r26, r18
  8a:	b3 07       	cpc	r27, r19
  8c:	e1 f7       	brne	.-8      	; 0x86 <__do_clear_bss>
  8e:	eb 34       	cpi	r30, 0x4B	; 75
  90:	f4 07       	cpc	r31, r20
  92:	31 f7       	brne	.-52     	; 0x60 <__do_copy_data+0x8>
  94:	bf d1       	rcall	.+894    	; 0x414 <main>
  96:	00 c0       	rjmp	.+0      	; 0x98 <_exit>

00000098 <_exit>:
  98:	f8 94       	cli

0000009a <__stop_program>:
  9a:	ff cf       	rjmp	.-2      	; 0x9a <__stop_program>

Disassembly of section .text:

0000080c <__bad_interrupt>:
 80c:	f9 cb       	rjmp	.-2062   	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.KeyExpansion:

0000009c <KeyExpansion>:
	temp3     = xtime(temp3);
	state[14] = state[14] ^ temp3 ^ temp1;
	temp3     = state[15] ^ temp2;
	temp3     = xtime(temp3);
	state[15] = state[15] ^ temp3 ^ temp1;
}
  9c:	af 92       	push	r10
  9e:	bf 92       	push	r11
  a0:	cf 92       	push	r12
  a2:	df 92       	push	r13
  a4:	ef 92       	push	r14
  a6:	ff 92       	push	r15
  a8:	0f 93       	push	r16
  aa:	1f 93       	push	r17
  ac:	cf 93       	push	r28
  ae:	df 93       	push	r29
  b0:	40 e0       	ldi	r20, 0x00	; 0
  b2:	0b c0       	rjmp	.+22     	; 0xca <KeyExpansion+0x2e>
  b4:	24 2f       	mov	r18, r20
  b6:	30 e0       	ldi	r19, 0x00	; 0
  b8:	fc 01       	movw	r30, r24
  ba:	e2 0f       	add	r30, r18
  bc:	f3 1f       	adc	r31, r19
  be:	db 01       	movw	r26, r22
  c0:	a2 0f       	add	r26, r18
  c2:	b3 1f       	adc	r27, r19
  c4:	2c 91       	ld	r18, X
  c6:	20 83       	st	Z, r18
  c8:	4f 5f       	subi	r20, 0xFF	; 255
  ca:	40 31       	cpi	r20, 0x10	; 16
  cc:	98 f3       	brcs	.-26     	; 0xb4 <KeyExpansion+0x18>
  ce:	ff 24       	eor	r15, r15
  d0:	f3 94       	inc	r15
  d2:	fd c0       	rjmp	.+506    	; 0x2ce <__EEPROM_REGION_LENGTH__+0xce>
  d4:	4f 2d       	mov	r20, r15
  d6:	50 e0       	ldi	r21, 0x00	; 0
  d8:	9a 01       	movw	r18, r20
  da:	22 95       	swap	r18
  dc:	32 95       	swap	r19
  de:	30 7f       	andi	r19, 0xF0	; 240
  e0:	32 27       	eor	r19, r18
  e2:	20 7f       	andi	r18, 0xF0	; 240
  e4:	32 27       	eor	r19, r18
  e6:	f9 01       	movw	r30, r18
  e8:	34 97       	sbiw	r30, 0x04	; 4
  ea:	e8 0f       	add	r30, r24
  ec:	f9 1f       	adc	r31, r25
  ee:	d0 80       	ld	r13, Z
  f0:	fc 01       	movw	r30, r24
  f2:	e2 0f       	add	r30, r18
  f4:	f3 1f       	adc	r31, r19
  f6:	df 01       	movw	r26, r30
  f8:	13 97       	sbiw	r26, 0x03	; 3
  fa:	ac 91       	ld	r26, X
  fc:	b0 e0       	ldi	r27, 0x00	; 0
  fe:	a0 5f       	subi	r26, 0xF0	; 240
 100:	be 4f       	sbci	r27, 0xFE	; 254
 102:	7c 91       	ld	r23, X
 104:	da 01       	movw	r26, r20
 106:	11 97       	sbiw	r26, 0x01	; 1
 108:	a2 95       	swap	r26
 10a:	b2 95       	swap	r27
 10c:	b0 7f       	andi	r27, 0xF0	; 240
 10e:	ba 27       	eor	r27, r26
 110:	a0 7f       	andi	r26, 0xF0	; 240
 112:	ba 27       	eor	r27, r26
 114:	a8 0f       	add	r26, r24
 116:	b9 1f       	adc	r27, r25
 118:	6c 91       	ld	r22, X
 11a:	40 5d       	subi	r20, 0xD0	; 208
 11c:	5d 4f       	sbci	r21, 0xFD	; 253
 11e:	ea 01       	movw	r28, r20
 120:	58 81       	ld	r21, Y
 122:	47 2f       	mov	r20, r23
 124:	46 27       	eor	r20, r22
 126:	45 27       	eor	r20, r21
 128:	40 83       	st	Z, r20
 12a:	89 01       	movw	r16, r18
 12c:	0f 5f       	subi	r16, 0xFF	; 255
 12e:	1f 4f       	sbci	r17, 0xFF	; 255
 130:	08 0f       	add	r16, r24
 132:	19 1f       	adc	r17, r25
 134:	af 01       	movw	r20, r30
 136:	42 50       	subi	r20, 0x02	; 2
 138:	51 09       	sbc	r21, r1
 13a:	ea 01       	movw	r28, r20
 13c:	48 81       	ld	r20, Y
 13e:	50 e0       	ldi	r21, 0x00	; 0
 140:	40 5f       	subi	r20, 0xF0	; 240
 142:	5e 4f       	sbci	r21, 0xFE	; 254
 144:	ea 01       	movw	r28, r20
 146:	58 81       	ld	r21, Y
 148:	11 96       	adiw	r26, 0x01	; 1
 14a:	4c 91       	ld	r20, X
 14c:	11 97       	sbiw	r26, 0x01	; 1
 14e:	45 27       	eor	r20, r21
 150:	e8 01       	movw	r28, r16
 152:	48 83       	st	Y, r20
 154:	b9 01       	movw	r22, r18
 156:	6e 5f       	subi	r22, 0xFE	; 254
 158:	7f 4f       	sbci	r23, 0xFF	; 255
 15a:	68 0f       	add	r22, r24
 15c:	79 1f       	adc	r23, r25
 15e:	af 01       	movw	r20, r30
 160:	41 50       	subi	r20, 0x01	; 1
 162:	51 09       	sbc	r21, r1
 164:	ea 01       	movw	r28, r20
 166:	48 81       	ld	r20, Y
 168:	50 e0       	ldi	r21, 0x00	; 0
 16a:	40 5f       	subi	r20, 0xF0	; 240
 16c:	5e 4f       	sbci	r21, 0xFE	; 254
 16e:	ea 01       	movw	r28, r20
 170:	58 81       	ld	r21, Y
 172:	12 96       	adiw	r26, 0x02	; 2
 174:	4c 91       	ld	r20, X
 176:	12 97       	sbiw	r26, 0x02	; 2
 178:	45 27       	eor	r20, r21
 17a:	eb 01       	movw	r28, r22
 17c:	48 83       	st	Y, r20
 17e:	a9 01       	movw	r20, r18
 180:	4d 5f       	subi	r20, 0xFD	; 253
 182:	5f 4f       	sbci	r21, 0xFF	; 255
 184:	48 0f       	add	r20, r24
 186:	59 1f       	adc	r21, r25
 188:	cd 2d       	mov	r28, r13
 18a:	d0 e0       	ldi	r29, 0x00	; 0
 18c:	c0 5f       	subi	r28, 0xF0	; 240
 18e:	de 4f       	sbci	r29, 0xFE	; 254
 190:	d8 81       	ld	r29, Y
 192:	13 96       	adiw	r26, 0x03	; 3
 194:	cc 91       	ld	r28, X
 196:	13 97       	sbiw	r26, 0x03	; 3
 198:	ec 2e       	mov	r14, r28
 19a:	ed 26       	eor	r14, r29
 19c:	ea 01       	movw	r28, r20
 19e:	e8 82       	st	Y, r14
 1a0:	e9 01       	movw	r28, r18
 1a2:	24 96       	adiw	r28, 0x04	; 4
 1a4:	c8 0f       	add	r28, r24
 1a6:	d9 1f       	adc	r29, r25
 1a8:	14 96       	adiw	r26, 0x04	; 4
 1aa:	dc 90       	ld	r13, X
 1ac:	14 97       	sbiw	r26, 0x04	; 4
 1ae:	e0 81       	ld	r30, Z
 1b0:	ed 25       	eor	r30, r13
 1b2:	e8 83       	st	Y, r30
 1b4:	69 01       	movw	r12, r18
 1b6:	e5 e0       	ldi	r30, 0x05	; 5
 1b8:	ce 0e       	add	r12, r30
 1ba:	d1 1c       	adc	r13, r1
 1bc:	c8 0e       	add	r12, r24
 1be:	d9 1e       	adc	r13, r25
 1c0:	15 96       	adiw	r26, 0x05	; 5
 1c2:	ec 90       	ld	r14, X
 1c4:	15 97       	sbiw	r26, 0x05	; 5
 1c6:	f8 01       	movw	r30, r16
 1c8:	10 81       	ld	r17, Z
 1ca:	1e 25       	eor	r17, r14
 1cc:	f6 01       	movw	r30, r12
 1ce:	10 83       	st	Z, r17
 1d0:	89 01       	movw	r16, r18
 1d2:	0a 5f       	subi	r16, 0xFA	; 250
 1d4:	1f 4f       	sbci	r17, 0xFF	; 255
 1d6:	08 0f       	add	r16, r24
 1d8:	19 1f       	adc	r17, r25
 1da:	16 96       	adiw	r26, 0x06	; 6
 1dc:	ec 90       	ld	r14, X
 1de:	16 97       	sbiw	r26, 0x06	; 6
 1e0:	fb 01       	movw	r30, r22
 1e2:	60 81       	ld	r22, Z
 1e4:	6e 25       	eor	r22, r14
 1e6:	f8 01       	movw	r30, r16
 1e8:	60 83       	st	Z, r22
 1ea:	f9 01       	movw	r30, r18
 1ec:	37 96       	adiw	r30, 0x07	; 7
 1ee:	5f 01       	movw	r10, r30
 1f0:	a8 0e       	add	r10, r24
 1f2:	b9 1e       	adc	r11, r25
 1f4:	17 96       	adiw	r26, 0x07	; 7
 1f6:	6c 91       	ld	r22, X
 1f8:	17 97       	sbiw	r26, 0x07	; 7
 1fa:	fa 01       	movw	r30, r20
 1fc:	40 81       	ld	r20, Z
 1fe:	46 27       	eor	r20, r22
 200:	f5 01       	movw	r30, r10
 202:	40 83       	st	Z, r20
 204:	a9 01       	movw	r20, r18
 206:	48 5f       	subi	r20, 0xF8	; 248
 208:	5f 4f       	sbci	r21, 0xFF	; 255
 20a:	48 0f       	add	r20, r24
 20c:	59 1f       	adc	r21, r25
 20e:	18 96       	adiw	r26, 0x08	; 8
 210:	7c 91       	ld	r23, X
 212:	18 97       	sbiw	r26, 0x08	; 8
 214:	68 81       	ld	r22, Y
 216:	67 27       	eor	r22, r23
 218:	ea 01       	movw	r28, r20
 21a:	68 83       	st	Y, r22
 21c:	b9 01       	movw	r22, r18
 21e:	67 5f       	subi	r22, 0xF7	; 247
 220:	7f 4f       	sbci	r23, 0xFF	; 255
 222:	68 0f       	add	r22, r24
 224:	79 1f       	adc	r23, r25
 226:	19 96       	adiw	r26, 0x09	; 9
 228:	dc 91       	ld	r29, X
 22a:	19 97       	sbiw	r26, 0x09	; 9
 22c:	f6 01       	movw	r30, r12
 22e:	c0 81       	ld	r28, Z
 230:	cd 27       	eor	r28, r29
 232:	fb 01       	movw	r30, r22
 234:	c0 83       	st	Z, r28
 236:	69 01       	movw	r12, r18
 238:	fa e0       	ldi	r31, 0x0A	; 10
 23a:	cf 0e       	add	r12, r31
 23c:	d1 1c       	adc	r13, r1
 23e:	c8 0e       	add	r12, r24
 240:	d9 1e       	adc	r13, r25
 242:	1a 96       	adiw	r26, 0x0a	; 10
 244:	dc 91       	ld	r29, X
 246:	1a 97       	sbiw	r26, 0x0a	; 10
 248:	f8 01       	movw	r30, r16
 24a:	c0 81       	ld	r28, Z
 24c:	cd 27       	eor	r28, r29
 24e:	f6 01       	movw	r30, r12
 250:	c0 83       	st	Z, r28
 252:	e9 01       	movw	r28, r18
 254:	2b 96       	adiw	r28, 0x0b	; 11
 256:	c8 0f       	add	r28, r24
 258:	d9 1f       	adc	r29, r25
 25a:	1b 96       	adiw	r26, 0x0b	; 11
 25c:	1c 91       	ld	r17, X
 25e:	1b 97       	sbiw	r26, 0x0b	; 11
 260:	f5 01       	movw	r30, r10
 262:	00 81       	ld	r16, Z
 264:	e0 2f       	mov	r30, r16
 266:	e1 27       	eor	r30, r17
 268:	e8 83       	st	Y, r30
 26a:	f9 01       	movw	r30, r18
 26c:	3c 96       	adiw	r30, 0x0c	; 12
 26e:	5f 01       	movw	r10, r30
 270:	a8 0e       	add	r10, r24
 272:	b9 1e       	adc	r11, r25
 274:	1c 96       	adiw	r26, 0x0c	; 12
 276:	1c 91       	ld	r17, X
 278:	1c 97       	sbiw	r26, 0x0c	; 12
 27a:	fa 01       	movw	r30, r20
 27c:	40 81       	ld	r20, Z
 27e:	41 27       	eor	r20, r17
 280:	f5 01       	movw	r30, r10
 282:	40 83       	st	Z, r20
 284:	f9 01       	movw	r30, r18
 286:	3d 96       	adiw	r30, 0x0d	; 13
 288:	8f 01       	movw	r16, r30
 28a:	08 0f       	add	r16, r24
 28c:	19 1f       	adc	r17, r25
 28e:	1d 96       	adiw	r26, 0x0d	; 13
 290:	5c 91       	ld	r21, X
 292:	1d 97       	sbiw	r26, 0x0d	; 13
 294:	fb 01       	movw	r30, r22
 296:	40 81       	ld	r20, Z
 298:	45 27       	eor	r20, r21
 29a:	f8 01       	movw	r30, r16
 29c:	40 83       	st	Z, r20
 29e:	f9 01       	movw	r30, r18
 2a0:	3e 96       	adiw	r30, 0x0e	; 14
 2a2:	bf 01       	movw	r22, r30
 2a4:	68 0f       	add	r22, r24
 2a6:	79 1f       	adc	r23, r25
 2a8:	1e 96       	adiw	r26, 0x0e	; 14
 2aa:	5c 91       	ld	r21, X
 2ac:	1e 97       	sbiw	r26, 0x0e	; 14
 2ae:	f6 01       	movw	r30, r12
 2b0:	40 81       	ld	r20, Z
 2b2:	45 27       	eor	r20, r21
 2b4:	fb 01       	movw	r30, r22
 2b6:	40 83       	st	Z, r20
 2b8:	21 5f       	subi	r18, 0xF1	; 241
 2ba:	3f 4f       	sbci	r19, 0xFF	; 255
 2bc:	fc 01       	movw	r30, r24
 2be:	e2 0f       	add	r30, r18
 2c0:	f3 1f       	adc	r31, r19
 2c2:	1f 96       	adiw	r26, 0x0f	; 15
 2c4:	3c 91       	ld	r19, X
 2c6:	28 81       	ld	r18, Y
 2c8:	23 27       	eor	r18, r19
 2ca:	20 83       	st	Z, r18
 2cc:	f3 94       	inc	r15
 2ce:	fa e0       	ldi	r31, 0x0A	; 10
 2d0:	ff 15       	cp	r31, r15
 2d2:	08 f0       	brcs	.+2      	; 0x2d6 <__EEPROM_REGION_LENGTH__+0xd6>
 2d4:	ff ce       	rjmp	.-514    	; 0xd4 <KeyExpansion+0x38>
 2d6:	df 91       	pop	r29
 2d8:	cf 91       	pop	r28
 2da:	1f 91       	pop	r17
 2dc:	0f 91       	pop	r16
 2de:	ff 90       	pop	r15
 2e0:	ef 90       	pop	r14
 2e2:	df 90       	pop	r13
 2e4:	cf 90       	pop	r12
 2e6:	bf 90       	pop	r11
 2e8:	af 90       	pop	r10
 2ea:	08 95       	ret

Disassembly of section .text.xtime:

000007ec <xtime>:
 7ec:	88 23       	and	r24, r24
 7ee:	24 f4       	brge	.+8      	; 0x7f8 <xtime+0xc>
 7f0:	88 0f       	add	r24, r24
 7f2:	9b e1       	ldi	r25, 0x1B	; 27
 7f4:	89 27       	eor	r24, r25
 7f6:	08 95       	ret
 7f8:	88 0f       	add	r24, r24
 7fa:	08 95       	ret

Disassembly of section .text.SubBytes_ShiftRows:

000006d8 <SubBytes_ShiftRows>:
 6d8:	fc 01       	movw	r30, r24
 6da:	a0 81       	ld	r26, Z
 6dc:	b0 e0       	ldi	r27, 0x00	; 0
 6de:	a0 5f       	subi	r26, 0xF0	; 240
 6e0:	be 4f       	sbci	r27, 0xFE	; 254
 6e2:	8c 91       	ld	r24, X
 6e4:	80 83       	st	Z, r24
 6e6:	a4 81       	ldd	r26, Z+4	; 0x04
 6e8:	b0 e0       	ldi	r27, 0x00	; 0
 6ea:	a0 5f       	subi	r26, 0xF0	; 240
 6ec:	be 4f       	sbci	r27, 0xFE	; 254
 6ee:	8c 91       	ld	r24, X
 6f0:	84 83       	std	Z+4, r24	; 0x04
 6f2:	a0 85       	ldd	r26, Z+8	; 0x08
 6f4:	b0 e0       	ldi	r27, 0x00	; 0
 6f6:	a0 5f       	subi	r26, 0xF0	; 240
 6f8:	be 4f       	sbci	r27, 0xFE	; 254
 6fa:	8c 91       	ld	r24, X
 6fc:	80 87       	std	Z+8, r24	; 0x08
 6fe:	a4 85       	ldd	r26, Z+12	; 0x0c
 700:	b0 e0       	ldi	r27, 0x00	; 0
 702:	a0 5f       	subi	r26, 0xF0	; 240
 704:	be 4f       	sbci	r27, 0xFE	; 254
 706:	8c 91       	ld	r24, X
 708:	84 87       	std	Z+12, r24	; 0x0c
 70a:	a1 81       	ldd	r26, Z+1	; 0x01
 70c:	b0 e0       	ldi	r27, 0x00	; 0
 70e:	a0 5f       	subi	r26, 0xF0	; 240
 710:	be 4f       	sbci	r27, 0xFE	; 254
 712:	8c 91       	ld	r24, X
 714:	a5 81       	ldd	r26, Z+5	; 0x05
 716:	b0 e0       	ldi	r27, 0x00	; 0
 718:	a0 5f       	subi	r26, 0xF0	; 240
 71a:	be 4f       	sbci	r27, 0xFE	; 254
 71c:	9c 91       	ld	r25, X
 71e:	91 83       	std	Z+1, r25	; 0x01
 720:	a1 85       	ldd	r26, Z+9	; 0x09
 722:	b0 e0       	ldi	r27, 0x00	; 0
 724:	a0 5f       	subi	r26, 0xF0	; 240
 726:	be 4f       	sbci	r27, 0xFE	; 254
 728:	9c 91       	ld	r25, X
 72a:	95 83       	std	Z+5, r25	; 0x05
 72c:	a5 85       	ldd	r26, Z+13	; 0x0d
 72e:	b0 e0       	ldi	r27, 0x00	; 0
 730:	a0 5f       	subi	r26, 0xF0	; 240
 732:	be 4f       	sbci	r27, 0xFE	; 254
 734:	9c 91       	ld	r25, X
 736:	91 87       	std	Z+9, r25	; 0x09
 738:	85 87       	std	Z+13, r24	; 0x0d
 73a:	a2 81       	ldd	r26, Z+2	; 0x02
 73c:	b0 e0       	ldi	r27, 0x00	; 0
 73e:	a0 5f       	subi	r26, 0xF0	; 240
 740:	be 4f       	sbci	r27, 0xFE	; 254
 742:	9c 91       	ld	r25, X
 744:	a6 81       	ldd	r26, Z+6	; 0x06
 746:	b0 e0       	ldi	r27, 0x00	; 0
 748:	a0 5f       	subi	r26, 0xF0	; 240
 74a:	be 4f       	sbci	r27, 0xFE	; 254
 74c:	8c 91       	ld	r24, X
 74e:	a2 85       	ldd	r26, Z+10	; 0x0a
 750:	b0 e0       	ldi	r27, 0x00	; 0
 752:	a0 5f       	subi	r26, 0xF0	; 240
 754:	be 4f       	sbci	r27, 0xFE	; 254
 756:	2c 91       	ld	r18, X
 758:	22 83       	std	Z+2, r18	; 0x02
 75a:	a6 85       	ldd	r26, Z+14	; 0x0e
 75c:	b0 e0       	ldi	r27, 0x00	; 0
 75e:	a0 5f       	subi	r26, 0xF0	; 240
 760:	be 4f       	sbci	r27, 0xFE	; 254
 762:	2c 91       	ld	r18, X
 764:	26 83       	std	Z+6, r18	; 0x06
 766:	92 87       	std	Z+10, r25	; 0x0a
 768:	86 87       	std	Z+14, r24	; 0x0e
 76a:	a7 85       	ldd	r26, Z+15	; 0x0f
 76c:	b0 e0       	ldi	r27, 0x00	; 0
 76e:	a0 5f       	subi	r26, 0xF0	; 240
 770:	be 4f       	sbci	r27, 0xFE	; 254
 772:	8c 91       	ld	r24, X
 774:	a3 85       	ldd	r26, Z+11	; 0x0b
 776:	b0 e0       	ldi	r27, 0x00	; 0
 778:	a0 5f       	subi	r26, 0xF0	; 240
 77a:	be 4f       	sbci	r27, 0xFE	; 254
 77c:	9c 91       	ld	r25, X
 77e:	97 87       	std	Z+15, r25	; 0x0f
 780:	a7 81       	ldd	r26, Z+7	; 0x07
 782:	b0 e0       	ldi	r27, 0x00	; 0
 784:	a0 5f       	subi	r26, 0xF0	; 240
 786:	be 4f       	sbci	r27, 0xFE	; 254
 788:	9c 91       	ld	r25, X
 78a:	93 87       	std	Z+11, r25	; 0x0b
 78c:	a3 81       	ldd	r26, Z+3	; 0x03
 78e:	b0 e0       	ldi	r27, 0x00	; 0
 790:	a0 5f       	subi	r26, 0xF0	; 240
 792:	be 4f       	sbci	r27, 0xFE	; 254
 794:	9c 91       	ld	r25, X
 796:	97 83       	std	Z+7, r25	; 0x07
 798:	83 83       	std	Z+3, r24	; 0x03
 79a:	08 95       	ret

Disassembly of section .text.MixColumnns:

000002ec <MixColumnns>:
 2ec:	df 92       	push	r13
 2ee:	ef 92       	push	r14
 2f0:	ff 92       	push	r15
 2f2:	0f 93       	push	r16
 2f4:	1f 93       	push	r17
 2f6:	cf 93       	push	r28
 2f8:	df 93       	push	r29
 2fa:	ec 01       	movw	r28, r24
 2fc:	d8 80       	ld	r13, Y
 2fe:	f9 80       	ldd	r15, Y+1	; 0x01
 300:	8d 2d       	mov	r24, r13
 302:	8f 25       	eor	r24, r15
 304:	0a 81       	ldd	r16, Y+2	; 0x02
 306:	eb 80       	ldd	r14, Y+3	; 0x03
 308:	18 2f       	mov	r17, r24
 30a:	10 27       	eor	r17, r16
 30c:	1e 25       	eor	r17, r14
 30e:	6e d2       	rcall	.+1244   	; 0x7ec <xtime>
 310:	8d 25       	eor	r24, r13
 312:	81 27       	eor	r24, r17
 314:	88 83       	st	Y, r24
 316:	8f 2d       	mov	r24, r15
 318:	80 27       	eor	r24, r16
 31a:	68 d2       	rcall	.+1232   	; 0x7ec <xtime>
 31c:	8f 25       	eor	r24, r15
 31e:	f8 2e       	mov	r15, r24
 320:	f1 26       	eor	r15, r17
 322:	f9 82       	std	Y+1, r15	; 0x01
 324:	80 2f       	mov	r24, r16
 326:	8e 25       	eor	r24, r14
 328:	61 d2       	rcall	.+1218   	; 0x7ec <xtime>
 32a:	80 27       	eor	r24, r16
 32c:	08 2f       	mov	r16, r24
 32e:	01 27       	eor	r16, r17
 330:	0a 83       	std	Y+2, r16	; 0x02
 332:	8d 2d       	mov	r24, r13
 334:	8e 25       	eor	r24, r14
 336:	5a d2       	rcall	.+1204   	; 0x7ec <xtime>
 338:	8e 25       	eor	r24, r14
 33a:	18 27       	eor	r17, r24
 33c:	1b 83       	std	Y+3, r17	; 0x03
 33e:	dc 80       	ldd	r13, Y+4	; 0x04
 340:	fd 80       	ldd	r15, Y+5	; 0x05
 342:	8d 2d       	mov	r24, r13
 344:	8f 25       	eor	r24, r15
 346:	0e 81       	ldd	r16, Y+6	; 0x06
 348:	ef 80       	ldd	r14, Y+7	; 0x07
 34a:	18 2f       	mov	r17, r24
 34c:	10 27       	eor	r17, r16
 34e:	1e 25       	eor	r17, r14
 350:	4d d2       	rcall	.+1178   	; 0x7ec <xtime>
 352:	8d 25       	eor	r24, r13
 354:	81 27       	eor	r24, r17
 356:	8c 83       	std	Y+4, r24	; 0x04
 358:	8f 2d       	mov	r24, r15
 35a:	80 27       	eor	r24, r16
 35c:	47 d2       	rcall	.+1166   	; 0x7ec <xtime>
 35e:	8f 25       	eor	r24, r15
 360:	f8 2e       	mov	r15, r24
 362:	f1 26       	eor	r15, r17
 364:	fd 82       	std	Y+5, r15	; 0x05
 366:	80 2f       	mov	r24, r16
 368:	8e 25       	eor	r24, r14
 36a:	40 d2       	rcall	.+1152   	; 0x7ec <xtime>
 36c:	80 27       	eor	r24, r16
 36e:	08 2f       	mov	r16, r24
 370:	01 27       	eor	r16, r17
 372:	0e 83       	std	Y+6, r16	; 0x06
 374:	8d 2d       	mov	r24, r13
 376:	8e 25       	eor	r24, r14
 378:	39 d2       	rcall	.+1138   	; 0x7ec <xtime>
 37a:	8e 25       	eor	r24, r14
 37c:	18 27       	eor	r17, r24
 37e:	1f 83       	std	Y+7, r17	; 0x07
 380:	d8 84       	ldd	r13, Y+8	; 0x08
 382:	f9 84       	ldd	r15, Y+9	; 0x09
 384:	8d 2d       	mov	r24, r13
 386:	8f 25       	eor	r24, r15
 388:	0a 85       	ldd	r16, Y+10	; 0x0a
 38a:	eb 84       	ldd	r14, Y+11	; 0x0b
 38c:	18 2f       	mov	r17, r24
 38e:	10 27       	eor	r17, r16
 390:	1e 25       	eor	r17, r14
 392:	2c d2       	rcall	.+1112   	; 0x7ec <xtime>
 394:	8d 25       	eor	r24, r13
 396:	81 27       	eor	r24, r17
 398:	88 87       	std	Y+8, r24	; 0x08
 39a:	8f 2d       	mov	r24, r15
 39c:	80 27       	eor	r24, r16
 39e:	26 d2       	rcall	.+1100   	; 0x7ec <xtime>
 3a0:	8f 25       	eor	r24, r15
 3a2:	f8 2e       	mov	r15, r24
 3a4:	f1 26       	eor	r15, r17
 3a6:	f9 86       	std	Y+9, r15	; 0x09
 3a8:	80 2f       	mov	r24, r16
 3aa:	8e 25       	eor	r24, r14
 3ac:	1f d2       	rcall	.+1086   	; 0x7ec <xtime>
 3ae:	80 27       	eor	r24, r16
 3b0:	08 2f       	mov	r16, r24
 3b2:	01 27       	eor	r16, r17
 3b4:	0a 87       	std	Y+10, r16	; 0x0a
 3b6:	8d 2d       	mov	r24, r13
 3b8:	8e 25       	eor	r24, r14
 3ba:	18 d2       	rcall	.+1072   	; 0x7ec <xtime>
 3bc:	8e 25       	eor	r24, r14
 3be:	18 27       	eor	r17, r24
 3c0:	1b 87       	std	Y+11, r17	; 0x0b
 3c2:	dc 84       	ldd	r13, Y+12	; 0x0c
 3c4:	fd 84       	ldd	r15, Y+13	; 0x0d
 3c6:	8d 2d       	mov	r24, r13
 3c8:	8f 25       	eor	r24, r15
 3ca:	0e 85       	ldd	r16, Y+14	; 0x0e
 3cc:	ef 84       	ldd	r14, Y+15	; 0x0f
 3ce:	18 2f       	mov	r17, r24
 3d0:	10 27       	eor	r17, r16
 3d2:	1e 25       	eor	r17, r14
 3d4:	0b d2       	rcall	.+1046   	; 0x7ec <xtime>
 3d6:	8d 25       	eor	r24, r13
 3d8:	81 27       	eor	r24, r17
 3da:	8c 87       	std	Y+12, r24	; 0x0c
 3dc:	8f 2d       	mov	r24, r15
 3de:	80 27       	eor	r24, r16
 3e0:	05 d2       	rcall	.+1034   	; 0x7ec <xtime>
 3e2:	8f 25       	eor	r24, r15
 3e4:	f8 2e       	mov	r15, r24
 3e6:	f1 26       	eor	r15, r17
 3e8:	fd 86       	std	Y+13, r15	; 0x0d
 3ea:	80 2f       	mov	r24, r16
 3ec:	8e 25       	eor	r24, r14
 3ee:	fe d1       	rcall	.+1020   	; 0x7ec <xtime>
 3f0:	80 27       	eor	r24, r16
 3f2:	08 2f       	mov	r16, r24
 3f4:	01 27       	eor	r16, r17
 3f6:	0e 87       	std	Y+14, r16	; 0x0e
 3f8:	8d 2d       	mov	r24, r13
 3fa:	8e 25       	eor	r24, r14
 3fc:	f7 d1       	rcall	.+1006   	; 0x7ec <xtime>
 3fe:	8e 25       	eor	r24, r14
 400:	18 27       	eor	r17, r24
 402:	1f 87       	std	Y+15, r17	; 0x0f
 404:	df 91       	pop	r29
 406:	cf 91       	pop	r28
 408:	1f 91       	pop	r17
 40a:	0f 91       	pop	r16
 40c:	ff 90       	pop	r15
 40e:	ef 90       	pop	r14
 410:	df 90       	pop	r13
 412:	08 95       	ret

Disassembly of section .text.AddRoundKey:

00000508 <AddRoundKey>:
 508:	fc 01       	movw	r30, r24
 50a:	90 81       	ld	r25, Z
 50c:	80 e1       	ldi	r24, 0x10	; 16
 50e:	68 9f       	mul	r22, r24
 510:	b0 01       	movw	r22, r0
 512:	11 24       	eor	r1, r1
 514:	db 01       	movw	r26, r22
 516:	a0 5a       	subi	r26, 0xA0	; 160
 518:	bf 4f       	sbci	r27, 0xFF	; 255
 51a:	8c 91       	ld	r24, X
 51c:	89 27       	eor	r24, r25
 51e:	80 83       	st	Z, r24
 520:	94 81       	ldd	r25, Z+4	; 0x04
 522:	db 01       	movw	r26, r22
 524:	ac 59       	subi	r26, 0x9C	; 156
 526:	bf 4f       	sbci	r27, 0xFF	; 255
 528:	8c 91       	ld	r24, X
 52a:	89 27       	eor	r24, r25
 52c:	84 83       	std	Z+4, r24	; 0x04
 52e:	90 85       	ldd	r25, Z+8	; 0x08
 530:	db 01       	movw	r26, r22
 532:	a8 59       	subi	r26, 0x98	; 152
 534:	bf 4f       	sbci	r27, 0xFF	; 255
 536:	8c 91       	ld	r24, X
 538:	89 27       	eor	r24, r25
 53a:	80 87       	std	Z+8, r24	; 0x08
 53c:	94 85       	ldd	r25, Z+12	; 0x0c
 53e:	db 01       	movw	r26, r22
 540:	a4 59       	subi	r26, 0x94	; 148
 542:	bf 4f       	sbci	r27, 0xFF	; 255
 544:	8c 91       	ld	r24, X
 546:	89 27       	eor	r24, r25
 548:	84 87       	std	Z+12, r24	; 0x0c
 54a:	91 81       	ldd	r25, Z+1	; 0x01
 54c:	db 01       	movw	r26, r22
 54e:	af 59       	subi	r26, 0x9F	; 159
 550:	bf 4f       	sbci	r27, 0xFF	; 255
 552:	8c 91       	ld	r24, X
 554:	89 27       	eor	r24, r25
 556:	81 83       	std	Z+1, r24	; 0x01
 558:	95 81       	ldd	r25, Z+5	; 0x05
 55a:	db 01       	movw	r26, r22
 55c:	ab 59       	subi	r26, 0x9B	; 155
 55e:	bf 4f       	sbci	r27, 0xFF	; 255
 560:	8c 91       	ld	r24, X
 562:	89 27       	eor	r24, r25
 564:	85 83       	std	Z+5, r24	; 0x05
 566:	91 85       	ldd	r25, Z+9	; 0x09
 568:	db 01       	movw	r26, r22
 56a:	a7 59       	subi	r26, 0x97	; 151
 56c:	bf 4f       	sbci	r27, 0xFF	; 255
 56e:	8c 91       	ld	r24, X
 570:	89 27       	eor	r24, r25
 572:	81 87       	std	Z+9, r24	; 0x09
 574:	95 85       	ldd	r25, Z+13	; 0x0d
 576:	db 01       	movw	r26, r22
 578:	a3 59       	subi	r26, 0x93	; 147
 57a:	bf 4f       	sbci	r27, 0xFF	; 255
 57c:	8c 91       	ld	r24, X
 57e:	89 27       	eor	r24, r25
 580:	85 87       	std	Z+13, r24	; 0x0d
 582:	92 81       	ldd	r25, Z+2	; 0x02
 584:	db 01       	movw	r26, r22
 586:	ae 59       	subi	r26, 0x9E	; 158
 588:	bf 4f       	sbci	r27, 0xFF	; 255
 58a:	8c 91       	ld	r24, X
 58c:	89 27       	eor	r24, r25
 58e:	82 83       	std	Z+2, r24	; 0x02
 590:	96 81       	ldd	r25, Z+6	; 0x06
 592:	db 01       	movw	r26, r22
 594:	aa 59       	subi	r26, 0x9A	; 154
 596:	bf 4f       	sbci	r27, 0xFF	; 255
 598:	8c 91       	ld	r24, X
 59a:	89 27       	eor	r24, r25
 59c:	86 83       	std	Z+6, r24	; 0x06
 59e:	92 85       	ldd	r25, Z+10	; 0x0a
 5a0:	db 01       	movw	r26, r22
 5a2:	a6 59       	subi	r26, 0x96	; 150
 5a4:	bf 4f       	sbci	r27, 0xFF	; 255
 5a6:	8c 91       	ld	r24, X
 5a8:	89 27       	eor	r24, r25
 5aa:	82 87       	std	Z+10, r24	; 0x0a
 5ac:	96 85       	ldd	r25, Z+14	; 0x0e
 5ae:	db 01       	movw	r26, r22
 5b0:	a2 59       	subi	r26, 0x92	; 146
 5b2:	bf 4f       	sbci	r27, 0xFF	; 255
 5b4:	8c 91       	ld	r24, X
 5b6:	89 27       	eor	r24, r25
 5b8:	86 87       	std	Z+14, r24	; 0x0e
 5ba:	93 81       	ldd	r25, Z+3	; 0x03
 5bc:	db 01       	movw	r26, r22
 5be:	ad 59       	subi	r26, 0x9D	; 157
 5c0:	bf 4f       	sbci	r27, 0xFF	; 255
 5c2:	8c 91       	ld	r24, X
 5c4:	89 27       	eor	r24, r25
 5c6:	83 83       	std	Z+3, r24	; 0x03
 5c8:	97 81       	ldd	r25, Z+7	; 0x07
 5ca:	db 01       	movw	r26, r22
 5cc:	a9 59       	subi	r26, 0x99	; 153
 5ce:	bf 4f       	sbci	r27, 0xFF	; 255
 5d0:	8c 91       	ld	r24, X
 5d2:	89 27       	eor	r24, r25
 5d4:	87 83       	std	Z+7, r24	; 0x07
 5d6:	93 85       	ldd	r25, Z+11	; 0x0b
 5d8:	db 01       	movw	r26, r22
 5da:	a5 59       	subi	r26, 0x95	; 149
 5dc:	bf 4f       	sbci	r27, 0xFF	; 255
 5de:	8c 91       	ld	r24, X
 5e0:	89 27       	eor	r24, r25
 5e2:	83 87       	std	Z+11, r24	; 0x0b
 5e4:	97 85       	ldd	r25, Z+15	; 0x0f
 5e6:	db 01       	movw	r26, r22
 5e8:	a1 59       	subi	r26, 0x91	; 145
 5ea:	bf 4f       	sbci	r27, 0xFF	; 255
 5ec:	8c 91       	ld	r24, X
 5ee:	89 27       	eor	r24, r25
 5f0:	87 87       	std	Z+15, r24	; 0x0f
 5f2:	08 95       	ret

Disassembly of section .text.aes_init:

000007fc <aes_init>:
/*! \brief Performs Key Expansion
 * \param key  Initial Key vectors received from user
 */
void aes_init(uint8_t *key)
{
	KeyExpansion(key_schedule, key);
 7fc:	bc 01       	movw	r22, r24
 7fe:	80 e6       	ldi	r24, 0x60	; 96
 800:	90 e0       	ldi	r25, 0x00	; 0
 802:	4c dc       	rcall	.-1896   	; 0x9c <__data_load_end>
	// Set key ready flag to true to indicate key is ready for AES algorithm
	aes_key_ready = true;
 804:	81 e0       	ldi	r24, 0x01	; 1
 806:	80 93 3b 02 	sts	0x023B, r24	; 0x80023b <aes_key_ready>
 80a:	08 95       	ret

Disassembly of section .text.aes_cipher:

000005f4 <aes_cipher>:
	temp3     = xtime(temp3);
	state[14] = state[14] ^ temp3 ^ temp1;
	temp3     = state[15] ^ temp2;
	temp3     = xtime(temp3);
	state[15] = state[15] ^ temp3 ^ temp1;
}
 5f4:	1f 93       	push	r17
 5f6:	cf 93       	push	r28
 5f8:	df 93       	push	r29
 5fa:	ac 01       	movw	r20, r24
 5fc:	80 91 3b 02 	lds	r24, 0x023B	; 0x80023b <aes_key_ready>
 600:	81 11       	cpse	r24, r1
 602:	0e c0       	rjmp	.+28     	; 0x620 <aes_cipher+0x2c>
 604:	81 e0       	ldi	r24, 0x01	; 1
 606:	64 c0       	rjmp	.+200    	; 0x6d0 <aes_cipher+0xdc>
 608:	29 2f       	mov	r18, r25
 60a:	30 e0       	ldi	r19, 0x00	; 0
 60c:	fb 01       	movw	r30, r22
 60e:	e2 0f       	add	r30, r18
 610:	f3 1f       	adc	r31, r19
 612:	da 01       	movw	r26, r20
 614:	a2 0f       	add	r26, r18
 616:	b3 1f       	adc	r27, r19
 618:	2c 91       	ld	r18, X
 61a:	20 83       	st	Z, r18
 61c:	9f 5f       	subi	r25, 0xFF	; 255
 61e:	01 c0       	rjmp	.+2      	; 0x622 <aes_cipher+0x2e>
 620:	90 e0       	ldi	r25, 0x00	; 0
 622:	90 31       	cpi	r25, 0x10	; 16
 624:	88 f3       	brcs	.-30     	; 0x608 <aes_cipher+0x14>
 626:	eb 01       	movw	r28, r22
 628:	e0 e6       	ldi	r30, 0x60	; 96
 62a:	f0 e0       	ldi	r31, 0x00	; 0
 62c:	80 81       	ld	r24, Z
 62e:	98 81       	ld	r25, Y
 630:	89 27       	eor	r24, r25
 632:	88 83       	st	Y, r24
 634:	81 81       	ldd	r24, Z+1	; 0x01
 636:	99 81       	ldd	r25, Y+1	; 0x01
 638:	89 27       	eor	r24, r25
 63a:	89 83       	std	Y+1, r24	; 0x01
 63c:	82 81       	ldd	r24, Z+2	; 0x02
 63e:	9a 81       	ldd	r25, Y+2	; 0x02
 640:	89 27       	eor	r24, r25
 642:	8a 83       	std	Y+2, r24	; 0x02
 644:	83 81       	ldd	r24, Z+3	; 0x03
 646:	9b 81       	ldd	r25, Y+3	; 0x03
 648:	89 27       	eor	r24, r25
 64a:	8b 83       	std	Y+3, r24	; 0x03
 64c:	84 81       	ldd	r24, Z+4	; 0x04
 64e:	9c 81       	ldd	r25, Y+4	; 0x04
 650:	89 27       	eor	r24, r25
 652:	8c 83       	std	Y+4, r24	; 0x04
 654:	85 81       	ldd	r24, Z+5	; 0x05
 656:	9d 81       	ldd	r25, Y+5	; 0x05
 658:	89 27       	eor	r24, r25
 65a:	8d 83       	std	Y+5, r24	; 0x05
 65c:	86 81       	ldd	r24, Z+6	; 0x06
 65e:	9e 81       	ldd	r25, Y+6	; 0x06
 660:	89 27       	eor	r24, r25
 662:	8e 83       	std	Y+6, r24	; 0x06
 664:	87 81       	ldd	r24, Z+7	; 0x07
 666:	9f 81       	ldd	r25, Y+7	; 0x07
 668:	89 27       	eor	r24, r25
 66a:	8f 83       	std	Y+7, r24	; 0x07
 66c:	80 85       	ldd	r24, Z+8	; 0x08
 66e:	98 85       	ldd	r25, Y+8	; 0x08
 670:	89 27       	eor	r24, r25
 672:	88 87       	std	Y+8, r24	; 0x08
 674:	81 85       	ldd	r24, Z+9	; 0x09
 676:	99 85       	ldd	r25, Y+9	; 0x09
 678:	89 27       	eor	r24, r25
 67a:	89 87       	std	Y+9, r24	; 0x09
 67c:	82 85       	ldd	r24, Z+10	; 0x0a
 67e:	9a 85       	ldd	r25, Y+10	; 0x0a
 680:	89 27       	eor	r24, r25
 682:	8a 87       	std	Y+10, r24	; 0x0a
 684:	83 85       	ldd	r24, Z+11	; 0x0b
 686:	9b 85       	ldd	r25, Y+11	; 0x0b
 688:	89 27       	eor	r24, r25
 68a:	8b 87       	std	Y+11, r24	; 0x0b
 68c:	84 85       	ldd	r24, Z+12	; 0x0c
 68e:	9c 85       	ldd	r25, Y+12	; 0x0c
 690:	89 27       	eor	r24, r25
 692:	8c 87       	std	Y+12, r24	; 0x0c
 694:	85 85       	ldd	r24, Z+13	; 0x0d
 696:	9d 85       	ldd	r25, Y+13	; 0x0d
 698:	89 27       	eor	r24, r25
 69a:	8d 87       	std	Y+13, r24	; 0x0d
 69c:	86 85       	ldd	r24, Z+14	; 0x0e
 69e:	9e 85       	ldd	r25, Y+14	; 0x0e
 6a0:	89 27       	eor	r24, r25
 6a2:	8e 87       	std	Y+14, r24	; 0x0e
 6a4:	87 85       	ldd	r24, Z+15	; 0x0f
 6a6:	9f 85       	ldd	r25, Y+15	; 0x0f
 6a8:	89 27       	eor	r24, r25
 6aa:	8f 87       	std	Y+15, r24	; 0x0f
 6ac:	11 e0       	ldi	r17, 0x01	; 1
 6ae:	08 c0       	rjmp	.+16     	; 0x6c0 <aes_cipher+0xcc>
 6b0:	ce 01       	movw	r24, r28
 6b2:	12 d0       	rcall	.+36     	; 0x6d8 <SubBytes_ShiftRows>
 6b4:	ce 01       	movw	r24, r28
 6b6:	1a de       	rcall	.-972    	; 0x2ec <MixColumnns>
 6b8:	61 2f       	mov	r22, r17
 6ba:	ce 01       	movw	r24, r28
 6bc:	25 df       	rcall	.-438    	; 0x508 <AddRoundKey>
 6be:	1f 5f       	subi	r17, 0xFF	; 255
 6c0:	1a 30       	cpi	r17, 0x0A	; 10
 6c2:	b0 f3       	brcs	.-20     	; 0x6b0 <aes_cipher+0xbc>
 6c4:	ce 01       	movw	r24, r28
 6c6:	08 d0       	rcall	.+16     	; 0x6d8 <SubBytes_ShiftRows>
 6c8:	6a e0       	ldi	r22, 0x0A	; 10
 6ca:	ce 01       	movw	r24, r28
 6cc:	1d df       	rcall	.-454    	; 0x508 <AddRoundKey>
 6ce:	80 e0       	ldi	r24, 0x00	; 0
 6d0:	df 91       	pop	r29
 6d2:	cf 91       	pop	r28
 6d4:	1f 91       	pop	r17
 6d6:	08 95       	ret

Disassembly of section .text.convert_to_byte:

0000079c <convert_to_byte>:
//#include <iostream>
//#include <cstdlib>
#include "aes.h"

int convert_to_byte(int a) {
	switch (a) {
 79c:	8a 30       	cpi	r24, 0x0A	; 10
 79e:	91 05       	cpc	r25, r1
 7a0:	f8 f4       	brcc	.+62     	; 0x7e0 <convert_to_byte+0x44>
 7a2:	fc 01       	movw	r30, r24
 7a4:	ed 5e       	subi	r30, 0xED	; 237
 7a6:	ff 4f       	sbci	r31, 0xFF	; 255
 7a8:	09 94       	ijmp
		case 0:
		return 0b0111111;
 7aa:	8f e3       	ldi	r24, 0x3F	; 63
 7ac:	90 e0       	ldi	r25, 0x00	; 0
 7ae:	08 95       	ret
		case 1:
		return 0b00000110;
		case 2:
		return 0b01011011;
 7b0:	8b e5       	ldi	r24, 0x5B	; 91
 7b2:	90 e0       	ldi	r25, 0x00	; 0
 7b4:	08 95       	ret
		case 3:
		return 0b01001111;
 7b6:	8f e4       	ldi	r24, 0x4F	; 79
 7b8:	90 e0       	ldi	r25, 0x00	; 0
 7ba:	08 95       	ret
		case 4:
		return 0b01100110;
 7bc:	86 e6       	ldi	r24, 0x66	; 102
 7be:	90 e0       	ldi	r25, 0x00	; 0
 7c0:	08 95       	ret
		case 5:
		return 0b01101101;
 7c2:	8d e6       	ldi	r24, 0x6D	; 109
 7c4:	90 e0       	ldi	r25, 0x00	; 0
 7c6:	08 95       	ret
		case 6:
		return 0b01111101;
 7c8:	8d e7       	ldi	r24, 0x7D	; 125
 7ca:	90 e0       	ldi	r25, 0x00	; 0
 7cc:	08 95       	ret
		case 7:
		return 0b00000111;
 7ce:	87 e0       	ldi	r24, 0x07	; 7
 7d0:	90 e0       	ldi	r25, 0x00	; 0
 7d2:	08 95       	ret
		case 8:
		return 0b01111111;
 7d4:	8f e7       	ldi	r24, 0x7F	; 127
 7d6:	90 e0       	ldi	r25, 0x00	; 0
 7d8:	08 95       	ret
		case 9:
		return 0b01101111;
 7da:	8f e6       	ldi	r24, 0x6F	; 111
 7dc:	90 e0       	ldi	r25, 0x00	; 0
 7de:	08 95       	ret
		default:
		return 0b11001100;
 7e0:	8c ec       	ldi	r24, 0xCC	; 204
 7e2:	90 e0       	ldi	r25, 0x00	; 0
 7e4:	08 95       	ret
int convert_to_byte(int a) {
	switch (a) {
		case 0:
		return 0b0111111;
		case 1:
		return 0b00000110;
 7e6:	86 e0       	ldi	r24, 0x06	; 6
 7e8:	90 e0       	ldi	r25, 0x00	; 0
		case 9:
		return 0b01101111;
		default:
		return 0b11001100;
	}
}
 7ea:	08 95       	ret

Disassembly of section .text.main:

00000414 <main>:


int main(void)
{
 414:	cf 93       	push	r28
 416:	df 93       	push	r29
 418:	cd b7       	in	r28, 0x3d	; 61
 41a:	de b7       	in	r29, 0x3e	; 62
 41c:	e0 97       	sbiw	r28, 0x30	; 48
 41e:	0f b6       	in	r0, 0x3f	; 63
 420:	f8 94       	cli
 422:	de bf       	out	0x3e, r29	; 62
 424:	0f be       	out	0x3f, r0	; 63
 426:	cd bf       	out	0x3d, r28	; 61
	DDRD = 0b11110000;					// PORTD is set as input for buttons
 428:	80 ef       	ldi	r24, 0xF0	; 240
 42a:	81 bb       	out	0x11, r24	; 17
	uint8_t response = 'a';
	uint8_t aes_key[16] = { 'a','e','s','E','n','c','r','y','p','t','i','o','n','K','e','y' };
 42c:	80 e1       	ldi	r24, 0x10	; 16
 42e:	e0 e1       	ldi	r30, 0x10	; 16
 430:	f2 e0       	ldi	r31, 0x02	; 2
 432:	de 01       	movw	r26, r28
 434:	11 96       	adiw	r26, 0x01	; 1
 436:	01 90       	ld	r0, Z+
 438:	0d 92       	st	X+, r0
 43a:	8a 95       	dec	r24
 43c:	e1 f7       	brne	.-8      	; 0x436 <main+0x22>
	uint8_t aes_text[] = {'h', 'e', 'l', 'l', 'o', ',',' ', 'w','o','r','l','d', '0', '0', '0', '0' };
 43e:	80 e1       	ldi	r24, 0x10	; 16
 440:	e0 e2       	ldi	r30, 0x20	; 32
 442:	f2 e0       	ldi	r31, 0x02	; 2
 444:	de 01       	movw	r26, r28
 446:	51 96       	adiw	r26, 0x11	; 17
 448:	01 90       	ld	r0, Z+
 44a:	0d 92       	st	X+, r0
 44c:	8a 95       	dec	r24
 44e:	e1 f7       	brne	.-8      	; 0x448 <main+0x34>
	char strings[3][16] = { "testencryption00", "loremipsum012345", "ahgreat cstrings" };

*/	
	
	uint8_t intermediate_output[sizeof(aes_text) / sizeof(aes_text[0])];
	DDRB = 0b00000000;
 450:	17 ba       	out	0x17, r1	; 23
	DDRC = 0b00000000;
 452:	14 ba       	out	0x14, r1	; 20
	
	aes_init(aes_key);
 454:	ce 01       	movw	r24, r28
 456:	01 96       	adiw	r24, 0x01	; 1
 458:	d1 d1       	rcall	.+930    	; 0x7fc <aes_init>
	UCSRC = (1 << USBS) | (3 << UCSZ0);	
	*/
	
	while(1)
	{
		if (PORTD != 0x00) // top button
 45a:	82 b3       	in	r24, 0x12	; 18
 45c:	88 23       	and	r24, r24
 45e:	09 f4       	brne	.+2      	; 0x462 <__stack+0x3>
 460:	49 c0       	rjmp	.+146    	; 0x4f4 <__stack+0x95>
		{
			
			aes_cipher(aes_text, intermediate_output);
 462:	be 01       	movw	r22, r28
 464:	6f 5d       	subi	r22, 0xDF	; 223
 466:	7f 4f       	sbci	r23, 0xFF	; 255
 468:	ce 01       	movw	r24, r28
 46a:	41 96       	adiw	r24, 0x11	; 17
 46c:	c3 d0       	rcall	.+390    	; 0x5f4 <aes_cipher>
			PORTB = 0x11000000;
 46e:	18 ba       	out	0x18, r1	; 24
			PORTC = 0x01011010; // use as start flag
 470:	80 e1       	ldi	r24, 0x10	; 16
 472:	85 bb       	out	0x15, r24	; 21
			intermediate_output[0] = 0x4a;
 474:	8a e4       	ldi	r24, 0x4A	; 74
 476:	89 a3       	std	Y+33, r24	; 0x21
			intermediate_output[1] = 0x4b;
 478:	8b e4       	ldi	r24, 0x4B	; 75
 47a:	8a a3       	std	Y+34, r24	; 0x22
			for (int i = 0; i < sizeof(aes_text)/sizeof(aes_text[0]); i++) {
 47c:	e1 2c       	mov	r14, r1
 47e:	f1 2c       	mov	r15, r1
 480:	2b c0       	rjmp	.+86     	; 0x4d8 <__stack+0x79>
//				while (! (UCSRA & (1 << UDRE)) );		
				UDR = intermediate_output[i];//once transmitter is ready sent eight bit data // b4
 482:	01 e2       	ldi	r16, 0x21	; 33
 484:	10 e0       	ldi	r17, 0x00	; 0
 486:	0c 0f       	add	r16, r28
 488:	1d 1f       	adc	r17, r29
 48a:	0e 0d       	add	r16, r14
 48c:	1f 1d       	adc	r17, r15
 48e:	f8 01       	movw	r30, r16
 490:	80 81       	ld	r24, Z
 492:	8c b9       	out	0x0c, r24	; 12
				PORTB = 0x10000000;
 494:	18 ba       	out	0x18, r1	; 24
				PORTC = convert_to_byte(intermediate_output[i]&0xF0);
 496:	80 81       	ld	r24, Z
 498:	80 7f       	andi	r24, 0xF0	; 240
 49a:	90 e0       	ldi	r25, 0x00	; 0
 49c:	7f d1       	rcall	.+766    	; 0x79c <convert_to_byte>
 49e:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4a0:	ff e3       	ldi	r31, 0x3F	; 63
 4a2:	22 e4       	ldi	r18, 0x42	; 66
 4a4:	8f e0       	ldi	r24, 0x0F	; 15
 4a6:	f1 50       	subi	r31, 0x01	; 1
 4a8:	20 40       	sbci	r18, 0x00	; 0
 4aa:	80 40       	sbci	r24, 0x00	; 0
 4ac:	e1 f7       	brne	.-8      	; 0x4a6 <__stack+0x47>
 4ae:	00 c0       	rjmp	.+0      	; 0x4b0 <__stack+0x51>
 4b0:	00 00       	nop
				_delay_ms(200);
				PORTB = 0x01000000;
 4b2:	18 ba       	out	0x18, r1	; 24
				PORTC = convert_to_byte(intermediate_output[i]&0x0F);
 4b4:	f8 01       	movw	r30, r16
 4b6:	80 81       	ld	r24, Z
 4b8:	8f 70       	andi	r24, 0x0F	; 15
 4ba:	90 e0       	ldi	r25, 0x00	; 0
 4bc:	6f d1       	rcall	.+734    	; 0x79c <convert_to_byte>
 4be:	85 bb       	out	0x15, r24	; 21
 4c0:	ff e3       	ldi	r31, 0x3F	; 63
 4c2:	22 e4       	ldi	r18, 0x42	; 66
 4c4:	8f e0       	ldi	r24, 0x0F	; 15
 4c6:	f1 50       	subi	r31, 0x01	; 1
 4c8:	20 40       	sbci	r18, 0x00	; 0
 4ca:	80 40       	sbci	r24, 0x00	; 0
 4cc:	e1 f7       	brne	.-8      	; 0x4c6 <__stack+0x67>
 4ce:	00 c0       	rjmp	.+0      	; 0x4d0 <__stack+0x71>
 4d0:	00 00       	nop
			aes_cipher(aes_text, intermediate_output);
			PORTB = 0x11000000;
			PORTC = 0x01011010; // use as start flag
			intermediate_output[0] = 0x4a;
			intermediate_output[1] = 0x4b;
			for (int i = 0; i < sizeof(aes_text)/sizeof(aes_text[0]); i++) {
 4d2:	9f ef       	ldi	r25, 0xFF	; 255
 4d4:	e9 1a       	sub	r14, r25
 4d6:	f9 0a       	sbc	r15, r25
 4d8:	e0 e1       	ldi	r30, 0x10	; 16
 4da:	ee 16       	cp	r14, r30
 4dc:	f1 04       	cpc	r15, r1
 4de:	88 f2       	brcs	.-94     	; 0x482 <__stack+0x23>
				PORTB = 0x01000000;
				PORTC = convert_to_byte(intermediate_output[i]&0x0F);
				_delay_ms(200);
			}
			
			response = UDR;
 4e0:	8c b1       	in	r24, 0x0c	; 12
 4e2:	ff e3       	ldi	r31, 0x3F	; 63
 4e4:	22 e4       	ldi	r18, 0x42	; 66
 4e6:	8f e0       	ldi	r24, 0x0F	; 15
 4e8:	f1 50       	subi	r31, 0x01	; 1
 4ea:	20 40       	sbci	r18, 0x00	; 0
 4ec:	80 40       	sbci	r24, 0x00	; 0
 4ee:	e1 f7       	brne	.-8      	; 0x4e8 <__stack+0x89>
 4f0:	00 c0       	rjmp	.+0      	; 0x4f2 <__stack+0x93>
 4f2:	00 00       	nop
 4f4:	9f e1       	ldi	r25, 0x1F	; 31
 4f6:	e1 ea       	ldi	r30, 0xA1	; 161
 4f8:	f7 e0       	ldi	r31, 0x07	; 7
 4fa:	91 50       	subi	r25, 0x01	; 1
 4fc:	e0 40       	sbci	r30, 0x00	; 0
 4fe:	f0 40       	sbci	r31, 0x00	; 0
 500:	e1 f7       	brne	.-8      	; 0x4fa <__stack+0x9b>
 502:	00 c0       	rjmp	.+0      	; 0x504 <__stack+0xa5>
 504:	00 00       	nop
 506:	a9 cf       	rjmp	.-174    	; 0x45a <main+0x46>
